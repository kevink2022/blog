<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Problem-Solving on Kevin Kelly</title>
    <link>http://localhost:1313/blog/tags/problem-solving/</link>
    <description>Recent content in Problem-Solving on Kevin Kelly</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>kevink2019@gmail.com (Kevin Kelly)</managingEditor>
    <webMaster>kevink2019@gmail.com (Kevin Kelly)</webMaster>
    <copyright>Kevin Kelly (CC BY 4.0)</copyright>
    <lastBuildDate>Tue, 20 Sep 2011 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/blog/tags/problem-solving/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Video] [Essentials] Simple Made Easy</title>
      <link>http://localhost:1313/blog/learning/simple_made_easy/</link>
      <pubDate>Tue, 20 Sep 2011 00:00:00 +0000</pubDate><author>kevink2019@gmail.com (Kevin Kelly)</author>
      <guid>http://localhost:1313/blog/learning/simple_made_easy/</guid>
      <description>Simple Made Easy An absolute classic, which I have watched at least once a month since I first saw it. I think anyone writing software without understanding the fundamental difference between simple and easy that Rich articulates in this talk is destined to make some serious mistakes.&#xA;Related Simplicity Matters Notes This general concept of simple vs easy has to be the biggest influence on how I think not just about software, but pretty much everything, and it was the key that finally unblocked me from writing large systems without inevitable &amp;lsquo;inviting the elephant&amp;rsquo; as Rich describes in 2012 follow-up Simplicity Matters.</description>
      <content:encoded><![CDATA[<h3 id="simple-made-easyhttpswwwyoutubecomwatchvsxdougdseq4"><a href="https://www.youtube.com/watch?v=SxdOUGdseq4">Simple Made Easy</a></h3>
<p>An absolute classic, which I have watched at least once a month since I first saw it. I think anyone writing software without understanding the fundamental difference between simple and easy that Rich articulates in this talk is destined to make some serious mistakes.</p>
<h3 id="related">Related</h3>
<ul>
<li><a href="/blog/learning/simplicity_matters">Simplicity Matters</a></li>
</ul>
<h3 id="notes">Notes</h3>
<p>This general concept of simple vs easy has to be the biggest influence on how I think not just about software, but pretty much everything, and it was the key that finally unblocked me from writing large systems without inevitable &lsquo;inviting the elephant&rsquo; as Rich describes in 2012 follow-up Simplicity Matters.</p>
]]></content:encoded>
    </item>
    <item>
      <title>[Video] Hammock Driven Development</title>
      <link>http://localhost:1313/blog/learning/hammock_driven_development/</link>
      <pubDate>Mon, 25 Oct 2010 00:00:00 +0000</pubDate><author>kevink2019@gmail.com (Kevin Kelly)</author>
      <guid>http://localhost:1313/blog/learning/hammock_driven_development/</guid>
      <description>Hammock Driven Development Rich Hickey goes into the details about how he solves hard problems by utilizing the part of our brains that evolution created for to the deep connections abstractions require: the background brain.</description>
      <content:encoded><![CDATA[<h3 id="hammock-driven-developmenthttpswwwyoutubecomwatchvf84n5ofozbc"><a href="https://www.youtube.com/watch?v=f84n5oFoZBc">Hammock Driven Development</a></h3>
<p>Rich Hickey goes into the details about how he solves hard problems by utilizing the part of our brains that evolution created for to the deep connections abstractions require: the background brain.</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
